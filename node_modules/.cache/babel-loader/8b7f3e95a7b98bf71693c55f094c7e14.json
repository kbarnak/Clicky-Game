{"ast":null,"code":"import _toConsumableArray from \"/Users/kbarnak/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kbarnak/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kbarnak/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kbarnak/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kbarnak/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kbarnak/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kbarnak/Desktop/Clicky-Game/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Tile from './components/Tile';\nimport emojis from './images';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentScore: 0,\n      topScore: 0,\n      message: \"Try not to double click the Emoji!\",\n      clicked: [],\n      tiles: emojis\n    };\n\n    _this.handleTileCick = function (id) {\n      console.log(\"I've been clicked \".concat(id));\n\n      if (!_this.state.clicked.includes(id)) {\n        var newArr = _this.shuffle(_this.state.tiles);\n\n        _this.setState({\n          clicked: [].concat(_toConsumableArray(_this.state.clicked), [id]),\n          currentScore: _this.state.currentScore + 1,\n          tiles: newArr\n        }, function () {\n          console.log(this.state.clicked);\n        });\n      } else {\n        alert(\"Sorry! You lose!\");\n\n        if (_this.state.currentScore > _this.state.topScore) {\n          _this.setState({\n            clicked: [],\n            currentScore: 0,\n            topScore: _this.state.currentScore\n          });\n        } else {\n          _this.setState({\n            clicked: [],\n            currentScore: 0\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"shuffle\",\n    value: function shuffle(a) {\n      for (var i = a.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [a[j], a[i]];\n        a[i] = _ref[0];\n        a[j] = _ref[1];\n      }\n\n      return a;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Header, {\n        currentScore: this.state.currentScore,\n        topScore: this.state.topScore,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"game-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.tiles.map(function (tile, i) {\n        return React.createElement(Tile, {\n          src: tile.src,\n          key: i,\n          id: tile.id,\n          handleTileClick: _this2.handleTileCick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kbarnak/Desktop/Clicky-Game/src/App.js"],"names":["React","Component","Header","Tile","emojis","App","state","currentScore","topScore","message","clicked","tiles","handleTileCick","id","console","log","includes","newArr","shuffle","setState","alert","a","i","length","j","Math","floor","random","map","tile","src"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Tile from './components/Tile';\nimport emojis from './images';\n\nclass App extends Component {\n  state = {\n    currentScore: 0,\n    topScore: 0,\n    message: \"Try not to double click the Emoji!\",\n    clicked: [],\n    tiles: emojis\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n  handleTileCick = (id) => {\n    console.log(`I've been clicked ${id}`);\n\n    if (!this.state.clicked.includes(id)) {\n      const newArr = this.shuffle(this.state.tiles);\n      this.setState({\n        clicked: [...this.state.clicked, id],\n        currentScore: this.state.currentScore + 1,\n        tiles: newArr\n      }, function () {\n        console.log(this.state.clicked)\n      })\n    } else {\n      alert(\"Sorry! You lose!\")\n      if (this.state.currentScore > this.state.topScore) {\n        this.setState({\n          clicked: [],\n          currentScore: 0,\n          topScore: this.state.currentScore\n        })\n      } else {\n        this.setState({\n          clicked: [],\n          currentScore: 0\n        })\n\n      }\n\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        < Header\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n          message={this.state.message}\n        />\n        <div className=\"game-space\">\n          {this.state.tiles.map((tile, i) => (\n            < Tile\n              src={tile.src}\n              key={i}\n              id={tile.id}\n              handleTileClick={this.handleTileCick}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}